spring.main.allow-bean-definition-overriding=true
management.endpoints.web.exposure.include=*
spring.application.name=jeebiz-cloud-shadow
spring.profiles.active=local
################################################################################################################  
### Nacos \u914d\u7f6e
### https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html
### \u5728 Nacos Spring Cloud \u4e2d\uff0cdataId \u7684\u5b8c\u6574\u683c\u5f0f\u5982\u4e0b\uff1a
### ${prefix}-${spring.profile.active}.${file-extension}
### 1\u3001prefix \u9ed8\u8ba4\u4e3a spring.application.name \u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u9879 spring.cloud.nacos.config.prefix\u6765\u914d\u7f6e\u3002
### 2\u3001spring.profile.active \u5373\u4e3a\u5f53\u524d\u73af\u5883\u5bf9\u5e94\u7684 profile\uff0c\u8be6\u60c5\u53ef\u4ee5\u53c2\u8003 Spring Boot\u6587\u6863\u3002 \u6ce8\u610f\uff1a\u5f53 spring.profile.active \u4e3a\u7a7a\u65f6\uff0c\u5bf9\u5e94\u7684\u8fde\u63a5\u7b26 - \u4e5f\u5c06\u4e0d\u5b58\u5728\uff0cdataId \u7684\u62fc\u63a5\u683c\u5f0f\u53d8
### 3\u3001file-exetension \u4e3a\u914d\u7f6e\u5185\u5bb9\u7684\u6570\u636e\u683c\u5f0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u9879 spring.cloud.nacos.config.file-extension \u6765\u914d\u7f6e\u3002\u76ee\u524d\u53ea\u652f\u6301 properties \u548c yaml \u7c7b\u578b\u3002
################################################################################################################
spring.cloud.nacos.config.enabled=true
#nacos config dataId prefix
spring.cloud.nacos.config.prefix=${spring.application.name}
#namespace, separation configuration of different environments.
spring.cloud.nacos.config.namespace=ad8314a5-1f72-4a40-8741-3dc08f928845
#access key for namespace
#spring.cloud.nacos.config.access-key=nacos
#secret key for namespace
#spring.cloud.nacos.config.secret-key=nacos
#endpoint for Nacos, the domain name of a service, through which the server address can be dynamically obtained.
#spring.cloud.nacos.config.endpoint=
#nacos config server address
spring.cloud.nacos.config.server-addr=180.76.120.252:8848
#cluster name for nacos server.
#spring.cloud.nacos.discovery.cluster-name
#nacos config group, group is config data meta info.
spring.cloud.nacos.config.group=DEFAULT_GROUP
#context path for nacos config server.
spring.cloud.nacos.config.context-path=nacos
#encode for nacos config content.
spring.cloud.nacos.config.encode=UTF-8
#the suffix of nacos config dataId, also the file extension of config content.
# \u6307\u5b9a\u914d\u7f6e\u7684\u540e\u7f00\uff0c\u652f\u6301 properties\u3001yaml\uff0c\u9ed8\u8ba4\u4e3a properties
#spring.cloud.nacos.config.file-extension=properties
spring.cloud.nacos.config.file-extension=yaml
#timeout for get config from nacos.
spring.cloud.nacos.config.timeout=3000
# Nacos\u6ce8\u518c\u4e2d\u5fc3
spring.cloud.service-registry.auto-registration.enabled=true
spring.cloud.nacos.discovery.enabled=true
#whether your service is a https service
spring.cloud.nacos.discovery.secure=false
#cluster name for nacos server.
#spring.cloud.nacos.discovery.cluster-name
#namespace, separation registry of different environments.
spring.cloud.nacos.discovery.namespace=ad8314a5-1f72-4a40-8741-3dc08f928845
#access key for namespace
#spring.cloud.nacos.discovery.access-key=nacos
#secret key for namespace
#spring.cloud.nacos.discovery.secret-key=nacos
#the domain name of a service, through which the server address can be dynamically obtained.
#spring.cloud.nacos.discovery.endpoint=
#nacos discovery server address
spring.cloud.nacos.discovery.server-addr=180.76.120.252:8848
#weight for service instance, the larger the value, the larger the weight.
spring.cloud.nacos.discovery.weight=5
#watch delay,duration to pull new service from nacos server.
spring.cloud.nacos.discovery.watch-delay=30000
#nacos naming log file name
#spring.cloud.nacos.discovery.log-name=nacos
#extra metadata to register.
spring.cloud.nacos.discovery.metadata.name=${swagger.title}
spring.cloud.nacos.discovery.metadata.detail=${swagger.description}
spring.cloud.nacos.discovery.metadata.version=${swagger.version}
################################################################################################################
### Nepxion \u914d\u7f6e
### https://github.com/Nepxion/Discovery
################################################################################################################
swagger.service.enabled=false
# Eureka config for discovery
eureka.instance.metadataMap.group=${spring.cloud.nacos.discovery.namespace}
eureka.instance.metadataMap.version=${application.formatted-version}
eureka.instance.metadataMap.region=${spring.profiles.active}
eureka.instance.metadataMap.env=env1
# Consul config for discovery
# \u53c2\u8003https://springcloud.cc/spring-cloud-consul.html - \u5143\u6570\u636e\u548cConsul\u6807\u7b7e
spring.cloud.consul.discovery.tags=group=${spring.cloud.nacos.discovery.namespace},version=${application.formatted-version},region=${spring.profiles.active},env=env1
# Zookeeper config for discovery
spring.cloud.zookeeper.discovery.metadata.group=${spring.cloud.nacos.discovery.namespace}
spring.cloud.zookeeper.discovery.metadata.version=${application.formatted-version}
spring.cloud.zookeeper.discovery.metadata.region=${spring.profiles.active}
spring.cloud.zookeeper.discovery.metadata.env=env1
# Nacos config for discovery
spring.cloud.nacos.discovery.metadata.group=${spring.cloud.nacos.discovery.namespace}
spring.cloud.nacos.discovery.metadata.version=${application.formatted-version}
spring.cloud.nacos.discovery.metadata.region=${spring.profiles.active}
spring.cloud.nacos.discovery.metadata.env=env1
nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
################################################################################################################
###j2cache (J2CacheConfig) \u57fa\u672c\u914d\u7f6e\uff1a
###https://gitee.com/ld/J2Cache
###https://gitee.com/ld/J2Cache/tree/master/modules/spring-boot2-starter
################################################################################################################
j2cache.config-location=/j2cache.properties
#j2cache.config-location=/j2cache-${spring.profiles.active}.properties
j2cache.l2-cache-open=true
j2cache.open-spring-cache=true
j2cache.allow-null-values=false
j2cache.cache-clean-mode=active
j2cache.redis-client=lettuce