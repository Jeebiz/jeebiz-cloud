<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.hiwepy.cloud.authz.dbperms.dao.IDataPermissionGroupDao">

    <!-- 开启二级缓存 -->
    <cache-ref namespace="io.hiwepy.cloud.authz.dbperms.dao.IDataPermissionDao"/>

    <resultMap id="DataPermsGroupBaseMap" type="DataPermissionGroupModel">
        <!-- 数据权限组ID -->
        <result property="id" column="G_ID"/>
        <!-- 数据权限组名称 -->
        <result property="name" column="G_NAME"/>
        <!-- 数据权限组简介 -->
        <result property="intro" column="G_INTRO"/>
        <!-- 可用状态:（0:不可用|1：可用） -->
        <result property="status" column="G_STATUS"/>
        <!-- 数据权限组创建时间 -->
        <result property="time24" column="G_TIME24"/>
    </resultMap>

    <resultMap id="DataPermsGroupMap" type="DataPermissionGroupModel">
        <!-- 数据权限组ID -->
        <result property="id" column="G_ID"/>
        <!-- 数据权限组名称 -->
        <result property="name" column="G_NAME"/>
        <!-- 数据权限组简介 -->
        <result property="intro" column="G_INTRO"/>
        <!-- 可用状态:（0:不可用|1：可用） -->
        <result property="status" column="G_STATUS"/>
        <!-- 数据权限组创建时间 -->
        <result property="time24" column="G_TIME24"/>
        <!-- 数据权限集合 -->
        <collection property="perms" column="{gid=G_ID}" select="getDataPermissions"></collection>
    </resultMap>

    <resultMap id="DataPermsMap" type="DataPermissionModel">
        <!-- 数据权限ID -->
        <result property="id" column="P_ID"/>
        <!-- 数据权限名称 -->
        <result property="name" column="P_NAME"/>
        <!-- 数据权限类型(1:原生|2:继承|3:复制) -->
        <result property="type" column="P_TYPE"/>
        <!-- 数据权限简介 -->
        <result property="intro" column="P_INTRO"/>
        <!-- 数据对象（实体表名称）） -->
        <result property="table" column="P_TABLE"/>
        <!-- 数据权限项关系 and/or -->
        <result property="relation" column="P_RELATION"/>
        <!-- 数据权限可用状态:（0:不可用|1：可用） -->
        <result property="status" column="P_STATUS"/>
        <!-- 数据权限排序 -->
        <result property="order" column="P_ORDER"/>
        <!-- 数据权限项集合 -->
        <collection property="items" column="{pid=P_ID}" select="getDataPermissionItems"></collection>
    </resultMap>

    <resultMap id="DataPermsItemMap" type="DataPermissionItemModel">
        <!-- 数据权限ID -->
        <result property="pid" column="P_ID"/>
        <!-- 数据权限项ID -->
        <result property="id" column="I_ID"/>
        <!-- 受限表字段名称（实体表字段列名称） -->
        <result property="column" column="I_COLUMN"/>
        <!-- 受限表字段名称（实体表字段中文名称） -->
        <result property="name" column="I_NAME"/>
        <!-- 受限表字段中文拼音 -->
        <result property="pinyin" column="I_PINYIN"/>
        <!-- 受限表字段限制条件  -->
        <result property="perms" column="I_PERMS"/>
        <!-- 受限表字段可用状态:（0:不可用|1：可用） -->
        <result property="status" column="I_STATUS"/>
        <!-- 受限表字段排序 -->
        <result property="order" column="I_ORDER"/>
    </resultMap>

    <resultMap id="DataPermsGroupPairMap" type="DataPermissionGroupCheckedModel">
        <!-- 数据权限组ID -->
        <result property="id" column="G_ID"/>
        <!-- 数据权限组名称 -->
        <result property="name" column="G_NAME"/>
        <!-- 数据权限组是否授权(1:已授权|0:未授权) -->
        <result property="checked" column="G_CHECKED"/>
    </resultMap>

    <resultMap id="PairMap" type="PairModel">
        <result property="key" column="G_ID"/>
        <result property="value" column="G_NAME"/>
    </resultMap>

    <insert id="insert" parameterType="DataPermissionGroupModel" flushCache="true">
        <selectKey keyProperty="id" order="BEFORE" resultType="String">
            SELECT sys_guid() FROM dual
        </selectKey>
        insert into SYS_DATA_PERMS_GROUP(G_ID,G_NAME,G_INTRO,G_STATUS)
        values(#{id},#{name},#{intro},#{status})
    </insert>

    <insert id="setRelation" flushCache="true" useGeneratedKeys="false">
        insert into SYS_DATA_PERMS_GROUP_REL(G_ID, P_ID)
        values (#{gid}, #{pid})
    </insert>

    <delete id="deleteRelation" flushCache="true">
        DELETE
        FROM SYS_DATA_PERMS_GROUP_REL t
        WHERE t.G_ID = #{gid}
          AND t.P_ID = #{pid}
    </delete>

    <insert id="setRoleRelation" flushCache="true" useGeneratedKeys="false">
        insert into SYS_DATA_PERMS_GROUP_ROLE_REL(APP_ID, G_ID, R_ID)
        values (sys_guid(), #{gid}, #{rid})
    </insert>

    <delete id="deleteRoleRelation" flushCache="true">
        DELETE
        FROM SYS_DATA_PERMS_GROUP_ROLE_REL t
        WHERE t.G_ID = #{gid}
          AND t.R_ID = #{rid}
    </delete>

    <delete id="deleteRoleRelations" flushCache="true">
        DELETE
        FROM SYS_DATA_PERMS_GROUP_ROLE_REL t
        WHERE t.R_ID = #{rid}
    </delete>

    <insert id="setUserRelation" flushCache="true" useGeneratedKeys="false">
        insert into SYS_DATA_PERMS_GROUP_USER_REL(APP_ID, G_ID, U_ID)
        values (sys_guid(), #{gid}, #{uid})
    </insert>

    <delete id="deleteUserRelation" flushCache="true">
        DELETE
        FROM SYS_DATA_PERMS_GROUP_USER_REL t
        WHERE t.G_ID = #{gid}
          AND t.U_ID = #{uid}
    </delete>

    <delete id="deleteUserRelations" flushCache="true">
        DELETE
        FROM SYS_DATA_PERMS_GROUP_USER_REL t
        WHERE t.U_ID = #{uid}
    </delete>

    <delete id="delete" flushCache="true">
        DECLARE
		
			 CURSOR perms_list is
        SELECT x.G_ID, x.P_ID
        FROM SYS_DATA_PERMS_GROUP_REL x
        WHERE x.G_ID = #{id};

        c_row perms_list%rowtype;

        BEGIN FOR c_row in perms_list LOOP

        DELETE
        FROM SYS_DATA_PERMS_ITEM t
        WHERE t.P_ID = c_row.P_ID;
        DELETE
        FROM SYS_DATA_PERMS t
        WHERE t.P_ID = c_row.P_ID;
        DELETE
        FROM SYS_DATA_PERMS_GROUP_REL t
        WHERE t.G_ID = c_row.G_ID
          AND t.P_ID = c_row.P_ID;
        DELETE
        FROM SYS_DATA_PERMS_ROLE_REL t
        WHERE t.P_ID = c_row.P_ID;
        DELETE
        FROM SYS_DATA_PERMS_USER_REL t
        WHERE t.P_ID = c_row.P_ID;

        END LOOP;

        DELETE
        FROM SYS_DATA_PERMS_GROUP_ROLE_REL t
        WHERE t.G_ID = #{id};
        DELETE
        FROM SYS_DATA_PERMS_GROUP_USER_REL t
        WHERE t.G_ID = #{id};
        DELETE
        FROM SYS_DATA_PERMS_GROUP t
        WHERE t.G_ID = #{id};

        END;
    </delete>

    <delete id="batchDelete" flushCache="true">
        DECLARE

        CURSOR perms_list is
        SELECT x.G_ID, x.P_ID
        FROM SYS_DATA_PERMS_GROUP_REL x
        WHERE x.G_ID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>;

        c_row perms_list%rowtype;

        BEGIN

        FOR c_row in perms_list LOOP

        DELETE FROM SYS_DATA_PERMS_ITEM t WHERE t.P_ID = c_row.P_ID;
        DELETE FROM SYS_DATA_PERMS t WHERE t.P_ID = c_row.P_ID;
        DELETE FROM SYS_DATA_PERMS_GROUP_REL t WHERE t.G_ID = c_row.G_ID AND t.P_ID = c_row.P_ID;
        DELETE FROM SYS_DATA_PERMS_ROLE_REL t WHERE t.P_ID = c_row.P_ID;
        DELETE FROM SYS_DATA_PERMS_USER_REL t WHERE t.P_ID = c_row.P_ID;

        END LOOP;

        DELETE FROM SYS_DATA_PERMS_GROUP_ROLE_REL t WHERE t.G_ID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>;
        DELETE FROM SYS_DATA_PERMS_GROUP_USER_REL t WHERE t.G_ID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>;
        DELETE FROM SYS_DATA_PERMS_GROUP t WHERE t.G_ID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>;

        END;
    </delete>

    <update id="setStatus" parameterType="java.lang.String" flushCache="true">
        UPDATE SYS_DATA_PERMS_GROUP t
        SET t.G_STATUS = #{status}
        WHERE t.G_ID = #{id}
    </update>

    <update id="update" parameterType="DataPermissionGroupModel" flushCache="true">
        UPDATE SYS_DATA_PERMS_GROUP t
        SET t.G_NAME   = #{name},
            t.G_INTRO  = #{intro},
            t.G_STATUS = #{status}
        WHERE t.G_ID = #{id}
    </update>

    <select id="getCountByName" resultType="int" parameterType="java.lang.String" useCache="false">
        SELECT count(t.G_ID)
        FROM SYS_DATA_PERMS_GROUP t
        WHERE t.G_NAME = #{name}
        <if test="origin != null and origin != ''">
            AND t.G_ID != #{origin}
        </if>
    </select>

    <select id="getPagedList" resultMap="DataPermsGroupBaseMap" parameterType="java.lang.String" useCache="false">
        SELECT
        t.G_ID,
        t.G_NAME,
        t.G_INTRO,
        t.G_STATUS,
        t.G_TIME24
        FROM SYS_DATA_PERMS_GROUP t
        <where>
            <if test="model.name != null and model.name != ''">
                and t.G_NAME like '%'|| #{model.name} || '%'
            </if>
            <if test="model.status != null and model.status != ''">
                and t.G_STATUS = #{model.status}
            </if>
        </where>
        ORDER By t.G_NAME ASC
    </select>

    <select id="getModel" resultMap="DataPermsGroupMap" parameterType="java.lang.String" useCache="false">
        SELECT t.G_ID,
               t.G_NAME,
               t.G_INTRO,
               t.G_STATUS,
               t.G_TIME24
        FROM SYS_DATA_PERMS_GROUP t
        WHERE t.G_ID = #{id}
    </select>

    <select id="getPairList" resultMap="PairMap" parameterType="java.lang.String" useCache="false">
        SELECT t.G_ID, t.G_NAME
        FROM SYS_DATA_PERMS_GROUP t
        WHERE t.G_STATUS = 1
        ORDER By t.G_NAME ASC
    </select>

    <select id="getRoleRelations" resultType="java.lang.String" useCache="false">
        SELECT t.G_ID
        FROM SYS_DATA_PERMS_GROUP_ROLE_REL t
        WHERE t.R_ID = #{rid}
    </select>

    <select id="getUserRelations" resultType="java.lang.String" useCache="false">
        SELECT t.G_ID
        FROM SYS_DATA_PERMS_GROUP_USER_REL t
        WHERE t.U_ID = #{uid}
    </select>

    <select id="getDataPermissions" resultMap="DataPermsMap" useCache="false">
        SELECT t.P_ID,
               t.P_NAME,
               t.P_TYPE,
               t.P_INTRO,
               t.P_TABLE,
               t.P_RELATION,
               t.P_STATUS,
               t.P_ORDER
        FROM SYS_DATA_PERMS t,
             SYS_DATA_PERMS_GROUP_REL t1
        WHERE t.P_ID = t1.P_ID
          AND t1.P_ID = #{gid}
        ORDER By t.P_ORDER ASC
    </select>

    <select id="getDataPermissionItems" resultMap="DataPermsItemMap" useCache="false">
        SELECT t.P_ID,
               t.I_ID,
               t.I_COLUMN,
               t.I_NAME,
               t.I_PINYIN,
               t.I_CONDITION,
               t.I_PERMS,
               t.I_STATUS,
               t.I_ORDER
        FROM SYS_DATA_PERMS_ITEM t
        WHERE t.P_ID = #{pid}
        ORDER By t.I_ORDER ASC
    </select>

    <select id="getDataPermissionNames" resultType="java.lang.String" useCache="false">
        SELECT t.P_NAME
        FROM SYS_DATA_PERMS t,
             SYS_DATA_PERMS_GROUP_REL t1
        WHERE t.P_ID = t1.P_ID
          AND t1.G_ID = #{gid}
        ORDER By t.P_ORDER ASC
    </select>

    <select id="getGroupRolePairs" resultMap="DataPermsGroupPairMap" useCache="false">
        SELECT t.G_ID,
               t.G_NAME,
               (CASE
                    WHEN (SELECT COUNT(x.R_ID)
                          FROM SYS_DATA_PERMS_GROUP_ROLE_REL x
                          WHERE x.R_ID = #{rid}
                            AND x.G_ID = t.G_ID) > 0 THEN 1
                    ELSE 0 END) G_CHECKED
        FROM SYS_DATA_PERMS_GROUP t
        ORDER By t.G_NAME ASC
    </select>

    <select id="getGroupUserPairs" resultMap="DataPermsGroupPairMap" useCache="false">
        SELECT t.G_ID,
               t.G_NAME,
               (CASE
                    WHEN (SELECT COUNT(x.U_ID)
                          FROM SYS_DATA_PERMS_GROUP_USER_REL x
                          WHERE x.U_ID = #{uid}
                            AND x.G_ID = t.G_ID) > 0 THEN 1
                    ELSE 0 END) G_CHECKED
        FROM SYS_DATA_PERMS_GROUP t
        ORDER By t.G_NAME ASC
    </select>


</mapper>